<blocks app="Snap4Arduino 1.2.7
, http://snap4arduino.rocks" version="1"><block-definition s="Buchstabe A" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe A&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe A&quot; ); }&#xD;for (int i = 0; i &lt; (15 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (30 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (75 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.8 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((0.8 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (75 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; (75 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe A</l></block><custom-block s="Drehe &gt; %n Grad"><l>15</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>30</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>75</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>.8</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>.8</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>75</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &lt; %n Grad"><l>75</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe H" type="command" category="arduino"><header></header><code>if(Serial) {&#xD;  if(&quot;Buchstabe H&quot; == &quot;&quot;) {&#xD;    Serial.print(&quot;\n&quot;);&#xD;  } else {   &#xD;    Serial.print(&quot;Buchstabe H&quot;);&#xD;  }&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) {&#xD;  if(&quot;&quot; == &quot;&quot;) {&#xD;    Serial.print(&quot;\n&quot;);&#xD;  } else {   &#xD;    Serial.print(&quot;&quot;);&#xD;  }&#xD;}</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe H</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe L" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe L&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe L&quot; ); }&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe L</l></block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe O" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe O&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe O&quot; ); }&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((1.8 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe O</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.8</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstage N" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe N&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe N&quot; ); }&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (23 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3.2 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (23 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe N</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>23</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3.2</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>23</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe I" type="command" category="arduino"><header></header><code>&#xD;if(Serial) { Serial.print(&quot;Buchstabe I&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe I&quot; ); }&#xD;&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }&#xD;&#xD;</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe I</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe Q" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe Q&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe Q&quot; ); }&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((1.3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (135 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (135 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe Q</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>135</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>135</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe E" type="command" category="arduino"><header></header><code>stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe E</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe R" type="command" category="arduino"><header></header><code>stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;  for (int i = 0; i &lt; 11; i++) {&#xD;  for (int j = 0; j &lt; ((0.2 * schritte) * schrittlaenge); j++) {&#xD;    vorwaerts();&#xD;  }&#xD;  for (int i = 0; i &lt; (18 * schritte_pro_grad); i++) {&#xD;    rechts_drehen();  &#xD;  }&#xD;  &#xD;  }&#xD;for (int i = 0; i &lt; (40 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((2.05 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (122 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;</code><translations></translations><inputs></inputs><script><block s="bubble"><l>BuchstabeR</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><block s="doRepeat"><l>11</l><script><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.2</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>18</l></custom-block></script></block><custom-block s="Drehe &gt; %n Grad"><l>40</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>2.05</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>122</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe K" type="command" category="arduino"><header></header><code>stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (50 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1.6 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (100 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((2.2 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; (50 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe K</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>50</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.6</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>100</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>2.2</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &lt; %n Grad"><l>50</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe G" type="command" category="arduino"><header></header><code>for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe G</l></block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe U" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe U&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe U&quot; ); }&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe U</l></block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe S" type="command" category="arduino"><header></header><code>for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe S</l></block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe T" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe T&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe T&quot; ); }&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((0.75 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.25 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe T</l></block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>0.75</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.25</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Leerzeichen" type="command" category="arduino"><header></header><code>for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;</code><translations></translations><inputs></inputs><script><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block></script></block-definition><block-definition s="Buchstabe Y" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe Y&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe Y&quot; ); }&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.65 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1.7 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; (25 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.4 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1.4 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (50 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.4 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (65 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe Y</l></block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.65</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.7</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &lt; %n Grad"><l>25</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.4</l><block var="schritte"/></block></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.4</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>50</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.4</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>65</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe V" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe V&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe V&quot; ); }&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (15 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3.15 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (30 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3.15 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (75 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe V</l></block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>15</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3.15</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>30</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3.15</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>75</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe C" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe C&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe C&quot; ); }&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe C</l></block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe F" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe F&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe F&quot; ); }&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe F</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe J" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe J&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe J&quot; ); }&#xD;for (int j = 0; j &lt; (0.5 * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe J</l></block><custom-block s="gehe %n Schritte vor"><l>0.5</l></custom-block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe M" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe M&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe M&quot; ); }&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (25 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.7 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (50 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.7 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (25 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;stift_hoch();&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((0.5 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int j = 0; j &lt; (90 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe M</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>25</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.7</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>50</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>1.7</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>25</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.5</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &lt; %n Grad"><l>90</l></custom-block><block s="bubble"><l></l></block></script></block-definition><block-definition s="Buchstabe P" type="command" category="arduino"><header></header><code>if(Serial) { Serial.print(&quot;Buchstabe P&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;Buchstabe P&quot; ); }&#xD;stift_runter();&#xD;for (int j = 0; j &lt; ((3 * schritte) * schrittlaenge); j++) {&#xD;  vorwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;  for (int i = 0; i &lt; 11; i++) {&#xD;  for (int j = 0; j &lt; ((0.2 * schritte) * schrittlaenge); j++) {&#xD;    vorwaerts();&#xD;  }&#xD;  for (int i = 0; i &lt; (18 * schritte_pro_grad); i++) {&#xD;    rechts_drehen();  &#xD;  }&#xD;  &#xD;  }&#xD;stift_hoch();&#xD;for (int j = 0; j &lt; (18 * schritte_pro_grad); j++) {&#xD;  links_drehen();&#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.2 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;for (int i = 0; i &lt; (90 * schritte_pro_grad); i++) {&#xD;  rechts_drehen();  &#xD;}&#xD;&#xD;for (int j = 0; j &lt; ((1.75 * schritte) * schrittlaenge); j++) {&#xD;  rueckwaerts();&#xD;}&#xD;if(Serial) { Serial.print(&quot;&quot; == &quot;&quot; ? &quot;\n&quot; : &quot;&quot; ); }</code><translations></translations><inputs></inputs><script><block s="bubble"><l>Buchstabe P</l></block><custom-block s="Stift runter"></custom-block><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>3</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><block s="doRepeat"><l>11</l><script><custom-block s="gehe %n Schritte vor"><block s="reportProduct"><l>0.2</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>18</l></custom-block></script></block><custom-block s="Stift hoch"></custom-block><custom-block s="Drehe &lt; %n Grad"><l>18</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.2</l><block var="schritte"/></block></custom-block><custom-block s="Drehe &gt; %n Grad"><l>90</l></custom-block><custom-block s="gehe %n Schritte zurueck"><block s="reportProduct"><l>1.75</l><block var="schritte"/></block></custom-block><block s="bubble"><l></l></block></script></block-definition></blocks>